"use strict";var React=require("react/addons"),classNames=require("classnames"),CharacterCount=require("./CharacterCount"),FormUtility=require("./FormUtilityMixin"),TextArea=React.createClass({displayName:"TextArea",propTypes:{limit:React.PropTypes.number,label:React.PropTypes.string,placeholder:React.PropTypes.string,helpText:React.PropTypes.string,disabled:React.PropTypes.bool,fieldKey:React.PropTypes.string.isRequired,required:React.PropTypes.bool},mixins:[FormUtility],getInitialState:function(){return{isValid:!0,renderCharacterCounter:!1,fieldValue:null}},componentWillReceiveProps:function(e){this.setState({fieldValue:this._findValueByPath(e.bindResource,e.fieldKey)})},handleBlur:function(e){this.setState({renderCharacterCounter:!1})},handleFocus:function(e){"undefined"!=typeof this.props.limit&&this.setState({renderCharacterCounter:!0})},render:function(){var e=classNames({"form-group":!0,"has-error":this._checkFieldIsValid()});return React.createElement("div",{className:e},React.createElement("label",{className:"control-label"},this.props.label),React.createElement("textarea",{className:"form-control",rows:this.props.rows||3,placeholder:this.props.placeholder||"",disabled:this.props.disabled,onChange:this.handleChange,onFocus:this.handleFocus,onBlur:this.handleBlur,value:this.state.fieldValue||""}),this.state.renderCharacterCounter&&React.createElement(CharacterCount,{input:this.state.fieldValue,limit:this.props.limit}),this._shouldRenderHelpBlock(this.props.helpText))}});module.exports=TextArea;